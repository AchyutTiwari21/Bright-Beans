import { useState } from 'react';
import { Link } from 'react-router-dom';
import { motion, AnimatePresence } from 'framer-motion';
import { ArrowLeft, Music } from 'lucide-react';
import PoemCard from '../components/poem/PoemCard';
import RhymingActivity from '../components/poem/RhymingActivity';

const HindiRhymesPage = () => {
  const [selectedRhyme, setSelectedRhyme] = useState<string | null>(null);
  const [showActivity, setShowActivity] = useState(false);

  const rhymes = [
    {
      id: 'chanda-mama',
      title: "‡§ö‡§Ç‡§¶‡§æ ‡§Æ‡§æ‡§Æ‡§æ ‡§¶‡•Ç‡§∞ ‡§ï‡•á",
      content: `‡§ö‡§Ç‡§¶‡§æ ‡§Æ‡§æ‡§Æ‡§æ ‡§¶‡•Ç‡§∞ ‡§ï‡•á,
‡§™‡•Å‡§è ‡§™‡§ï‡§æ‡§è‡§Ç ‡§¨‡•Ç‡§∞ ‡§ï‡•á‡•§
‡§Ü‡§™ ‡§ñ‡§æ‡§è‡§Ç ‡§•‡§æ‡§≤‡•Ä ‡§Æ‡•á‡§Ç,
‡§Æ‡•Å‡§®‡•ç‡§®‡•á ‡§ï‡•ã ‡§¶‡•á‡§Ç ‡§™‡•ç‡§Ø‡§æ‡§≤‡•Ä ‡§Æ‡•á‡§Ç‡•§
‡§™‡•ç‡§Ø‡§æ‡§≤‡•Ä ‡§ó‡§à ‡§ü‡•Ç‡§ü,
‡§Æ‡•Å‡§®‡•ç‡§®‡§æ ‡§ó‡§Ø‡§æ ‡§∞‡•Ç‡§†‡•§`,
      character: 'üåô',
      characterColor: 'bg-gradient-to-br from-blue-300 to-indigo-400',
      theme: "bg-gradient-to-br from-blue-100 to-indigo-100",
      videoUrl: "https://www.youtube.com/embed/v8ZxNTm4EAE?si=f_H7gTUkLv28zFxT",
      rhymingWords: [
        { word1: '‡§ï‡•á', word2: '‡§¨‡•Ç‡§∞ ‡§ï‡•á', emoji1: 'üåô', emoji2: 'üç™' },
        { word1: '‡§Æ‡•á‡§Ç', word2: '‡§™‡•ç‡§Ø‡§æ‡§≤‡•Ä ‡§Æ‡•á‡§Ç', emoji1: 'üçΩÔ∏è', emoji2: 'ü•õ' },
        { word1: '‡§ü‡•Ç‡§ü', word2: '‡§∞‡•Ç‡§†', emoji1: 'üíî', emoji2: 'üò¢' }
      ]
    },
    {
      id: 'aloo-kachalu',
      title: "‡§Ü‡§≤‡•Ç ‡§ï‡§ö‡§æ‡§≤‡•Ç",
      content: `"‡§Ü‡§≤‡•Ç ‡§ï‡§ö‡§æ‡§≤‡•Ç ‡§¨‡•á‡§ü‡§æ, ‡§ï‡§π‡§æ‡§Å ‡§ó‡§è ‡§•‡•á? ‡§ï‡§¶‡•ç‡§¶‡•Ç ‡§ï‡•Ä ‡§ü‡•ã‡§ï‡§∞‡•Ä ‡§Æ‡•á‡§Ç ‡§∏‡•ã ‡§∞‡§π‡•á ‡§•‡•á‡•§ ‡§ï‡§¶‡•ç‡§¶‡•Ç ‡§®‡•á ‡§≤‡§æ‡§§ ‡§Æ‡§æ‡§∞‡•Ä, ‡§∞‡•ã ‡§∞‡§π‡•á ‡§•‡•á‡•§ ‡§Æ‡§Æ‡•ç‡§Æ‡•Ä ‡§®‡•á ‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§ï‡§ø‡§Ø‡§æ, ‡§π‡§Å‡§∏ ‡§∞‡§π‡•á ‡§•‡•á‡•§ ‡§™‡§æ‡§™‡§æ ‡§®‡•á ‡§™‡•à‡§∏‡•á ‡§¶‡§ø‡§è, ‡§®‡§æ‡§ö ‡§∞‡§π‡•á ‡§•‡•á‡•§ ‡§≠‡•à‡§Ø‡§æ ‡§®‡•á ‡§≤‡§°‡•ç‡§°‡•Ç ‡§¶‡§ø‡§è, ‡§ñ‡§æ ‡§∞‡§π‡•á ‡§•‡•á‡•§"`,
      character: 'ü•î',
      characterColor: 'bg-gradient-to-br from-yellow-300 to-amber-400',
      theme: "bg-gradient-to-br from-green-100 to-teal-100",
      videoUrl: "https://www.youtube.com/embed/MKlM07RkGU0?si=JiuaXvkA5iu2M1D-",
      rhymingWords: [
        { word1: '‡§¨‡•á‡§ü‡§æ', word2: '‡§•‡•á', emoji1: 'üë∂', emoji2: '‚ùì' },
        { word1: '‡§Æ‡•á‡§Ç', word2: '‡§•‡•á', emoji1: 'üå≥', emoji2: 'üò¥' },
        { word1: '‡§Æ‡§æ‡§∞‡•Ä', word2: '‡§Ü‡§è', emoji1: 'ü¶µ', emoji2: 'üè†' }
      ]
    },
    {
      id: 'machli-rani',
      title: "‡§Æ‡§õ‡§≤‡•Ä ‡§ú‡§≤ ‡§ï‡•Ä ‡§∞‡§æ‡§®‡•Ä ‡§π‡•à",
      content: `‡§Æ‡§õ‡§≤‡•Ä ‡§ú‡§≤ ‡§ï‡•Ä ‡§∞‡§æ‡§®‡•Ä ‡§π‡•à,
‡§ú‡•Ä‡§µ‡§® ‡§â‡§∏‡§ï‡§æ ‡§™‡§æ‡§®‡•Ä ‡§π‡•à‡•§
‡§π‡§æ‡§• ‡§≤‡§ó‡§æ‡§ì ‡§°‡§∞ ‡§ú‡§æ‡§è‡§ó‡•Ä,
‡§¨‡§æ‡§π‡§∞ ‡§®‡§ø‡§ï‡§æ‡§≤‡•ã ‡§Æ‡§∞ ‡§ú‡§æ‡§è‡§ó‡•Ä‡•§`,
      character: 'üê†',
      characterColor: 'bg-gradient-to-br from-cyan-300 to-blue-400',
      theme: "bg-gradient-to-br from-cyan-100 to-blue-100",
      videoUrl: "https://www.youtube.com/embed/CUciBrtqFGM?si=-mOtyc5m2q_EFubg",
      rhymingWords: [
        { word1: '‡§∞‡§æ‡§®‡•Ä ‡§π‡•à', word2: '‡§™‡§æ‡§®‡•Ä ‡§π‡•à', emoji1: 'üë∏', emoji2: 'üíß' },
        { word1: '‡§ú‡§æ‡§è‡§ó‡•Ä', word2: '‡§ú‡§æ‡§è‡§ó‡•Ä', emoji1: 'üò®', emoji2: 'üíÄ' }
      ]
    },
    {
      id: 'nani-morni',
      title: "‡§®‡§æ‡§®‡•Ä ‡§§‡•á‡§∞‡•Ä ‡§Æ‡•ã‡§∞‡§®‡•Ä",
      content: `‡§®‡§æ‡§®‡•Ä ‡§§‡•á‡§∞‡•Ä ‡§Æ‡•ã‡§∞‡§®‡•Ä ‡§ï‡•ã ‡§Æ‡•ã‡§∞ ‡§≤‡•á ‡§ó‡§è,
‡§¨‡§æ‡§ï‡•Ä ‡§ú‡•ã ‡§¨‡§ö‡§æ ‡§•‡§æ ‡§ï‡§æ‡§≤‡•á ‡§ö‡•ã‡§∞ ‡§≤‡•á ‡§ó‡§è‡•§
‡§®‡§æ‡§®‡•Ä ‡§§‡•á‡§∞‡•Ä ‡§Æ‡•ã‡§∞‡§®‡•Ä ‡§ï‡•ã ‡§Æ‡•ã‡§∞ ‡§≤‡•á ‡§ó‡§è,
‡§¨‡§æ‡§ï‡•Ä ‡§ú‡•ã ‡§¨‡§ö‡§æ ‡§•‡§æ ‡§ï‡§æ‡§≤‡•á ‡§ö‡•ã‡§∞ ‡§≤‡•á ‡§ó‡§è‡•§`,
      character: 'ü¶ö',
      characterColor: 'bg-gradient-to-br from-green-400 to-emerald-500',
      theme: "bg-gradient-to-br from-purple-100 to-pink-100",
      videoUrl: "https://www.youtube.com/embed/k8sN7Vl3IFQ?si=F0xWo0DiusjIdhBX",
      rhymingWords: [
        { word1: '‡§ó‡§è', word2: '‡§ó‡§è', emoji1: 'ü¶ö', emoji2: 'ü¶ö' },
        { word1: '‡§π‡•à‡§Ç', word2: '‡§π‡•à‡§Ç', emoji1: 'üò≠', emoji2: 'üò≠' }
      ]
    },
    {
      id: 'lakdi-kathi',
      title: "‡§≤‡§ï‡§°‡§º‡•Ä ‡§ï‡•Ä ‡§ï‡§æ‡§†‡•Ä",
      content: `‡§≤‡§ï‡§°‡§º‡•Ä ‡§ï‡•Ä ‡§ï‡§æ‡§†‡•Ä ‡§ï‡§æ‡§†‡•Ä ‡§™‡•á ‡§ò‡•ã‡§°‡§º‡§æ
‡§ò‡•ã‡§°‡§º‡•á ‡§ï‡•Ä ‡§¶‡•Å‡§Æ ‡§™‡•á ‡§ú‡•ã ‡§Æ‡§æ‡§∞‡§æ ‡§π‡§•‡•å‡§°‡§º‡§æ

‡§¶‡•å‡§°‡§º‡§æ ‡§¶‡•å‡§°‡§º‡§æ ‡§¶‡•å‡§°‡§º‡§æ ‡§ò‡•ã‡§°‡§º‡§æ ‡§¶‡•Å‡§Æ ‡§â‡§†‡§æ ‡§ï‡•á ‡§¶‡•å‡§°‡§º‡§æ
‡§ò‡•ã‡§°‡§º‡§æ ‡§™‡§π‡•Å‡§Å‡§ö‡§æ ‡§ö‡•å‡§ï ‡§Æ‡•á‡§Ç ‡§ö‡•å‡§ï ‡§Æ‡•á‡§Ç ‡§•‡§æ ‡§®‡§æ‡§à

‡§ò‡•ã‡§°‡§º‡•á ‡§ú‡•Ä ‡§ï‡•Ä ‡§®‡§æ‡§à ‡§®‡•á ‡§π‡§ú‡§æ‡§Æ‡§§ ‡§ú‡•ã ‡§¨‡§®‡§æ‡§à
‡§¶‡•å‡§°‡§º‡§æ ‡§¶‡•å‡§°‡§º‡§æ ‡§¶‡•å‡§°‡§º‡§æ ‡§ò‡•ã‡§°‡§º‡§æ ‡§¶‡•Å‡§Æ ‡§â‡§†‡§æ ‡§ï‡•á ‡§¶‡•å‡§°‡§º‡§æ

‡§ò‡•ã‡§°‡§º‡§æ ‡§•‡§æ ‡§ò‡§Æ‡§Ç‡§°‡•Ä ‡§™‡§π‡•Å‡§Å‡§ö‡§æ ‡§∏‡§¨‡•ç‡§ú‡§º‡•Ä ‡§Æ‡§Ç‡§°‡•Ä
‡§∏‡§¨‡•ç‡§ú‡§º‡•Ä ‡§Æ‡§Ç‡§°‡•Ä ‡§¨‡§∞‡•ç‡§´‡§º ‡§™‡§°‡§º‡•Ä ‡§•‡•Ä ‡§¨‡§∞‡•ç‡§´‡§º ‡§Æ‡•á‡§Ç ‡§≤‡§ó ‡§ó‡§à ‡§†‡§Ç‡§°‡•Ä

‡§¶‡•å‡§°‡§º‡§æ ‡§¶‡•å‡§°‡§º‡§æ ‡§¶‡•å‡§°‡§º‡§æ ‡§ò‡•ã‡§°‡§º‡§æ ‡§¶‡•Å‡§Æ ‡§â‡§†‡§æ ‡§ï‡•á ‡§¶‡•å‡§°‡§º‡§æ
‡§ò‡•ã‡§°‡§º‡§æ ‡§Ö‡§™‡§®‡§æ ‡§§‡§ó‡•ú‡§æ ‡§π‡•à ‡§¶‡•á‡§ñ‡•ã ‡§ï‡§ø‡§§‡§®‡•Ä ‡§ö‡§∞‡•ç‡§¨‡•Ä ‡§π‡•à

‡§ö‡§≤‡§§‡§æ ‡§π‡•à ‡§Æ‡•á‡§π‡§∞‡•å‡§≤‡•Ä ‡§Æ‡•á‡§Ç ‡§™‡§∞ ‡§ò‡•ã‡§°‡§º‡§æ ‡§Ö‡§™‡§®‡§æ ‡§Ö‡§∞‡§¨‡•Ä ‡§π‡•à
‡§π‡§æ‡§• ‡§õ‡•Å‡§°‡§º‡§æ ‡§ï‡•á ‡§¶‡•å‡§°‡§º‡§æ ‡§ò‡•ã‡§°‡§º‡§æ ‡§¶‡•Å‡§Æ ‡§â‡§†‡§æ ‡§ï‡•á ‡§¶‡•å‡§°‡§º‡§æ

‡§≤‡§ï‡§°‡§º‡•Ä ‡§ï‡•Ä ‡§ï‡§æ‡§†‡•Ä ‡§ï‡§æ‡§†‡•Ä ‡§™‡•á ‡§ò‡•ã‡§°‡§º‡§æ
‡§ò‡•ã‡§°‡§º‡•á ‡§ï‡•Ä ‡§¶‡•Å‡§Æ ‡§™‡•á ‡§ú‡•ã ‡§Æ‡§æ‡§∞‡§æ ‡§π‡§•‡•å‡§°‡§º‡§æ

‡§¶‡•å‡§°‡§º‡§æ ‡§¶‡•å‡§°‡§º‡§æ ‡§¶‡•å‡§°‡§º‡§æ ‡§ò‡•ã‡§°‡§º‡§æ ‡§¶‡•Å‡§Æ ‡§â‡§†‡§æ ‡§ï‡•á ‡§¶‡•å‡§°‡§º‡§æ`,
      character: 'üêé',
      characterColor: 'bg-gradient-to-br from-amber-400 to-orange-500',
      theme: "bg-gradient-to-br from-yellow-100 to-orange-100",
      videoUrl: "https://www.youtube.com/embed/P2r7LoytBfo?si=0GungSwQ6U8n5i2A",
      rhymingWords: [
        { word1: '‡§ï‡§æ‡§†‡•Ä', word2: '‡§ò‡•ã‡§°‡§º‡§æ', emoji1: 'ü™ë', emoji2: 'üêé' },
        { word1: '‡§Æ‡•ã‡§°‡§º‡§æ', word2: '‡§ñ‡•ã‡§≤‡§æ', emoji1: 'üéÄ', emoji2: 'üîì' }
      ]
    }
  ];

  const getCurrentRhyme = () => {
    return rhymes.find(rhyme => rhyme.id === selectedRhyme);
  };

  const handleActivityComplete = (score: number) => {
    console.log('Activity completed with score:', score);
  };

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
        delayChildren: 0.2
      }
    }
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: { 
      opacity: 1, 
      y: 0,
      transition: {
        type: "spring",
        stiffness: 100,
        damping: 12
      }
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-orange-50 via-yellow-50 to-red-50">
      {/* Header */}
      <motion.header 
        initial={{ opacity: 0, y: -50 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8 }}
        className="bg-white/80 backdrop-blur-sm border-b border-orange-200 sticky top-0 z-10"
      >
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center gap-4">
            <Link 
              to="/" 
              className="flex items-center gap-2 text-orange-600 hover:text-orange-800 transition-colors"
            >
              <ArrowLeft className="w-5 h-5" />
              <span>Back to Home</span>
            </Link>
            <div className="flex items-center gap-2 ml-auto">
              <Music className="w-6 h-6 text-orange-500" />
              <h1 className="text-2xl font-bold text-orange-800">‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§¨‡§æ‡§≤‡§ó‡•Ä‡§§</h1>
              <Music className="w-6 h-6 text-orange-500" />
            </div>
          </div>
        </div>
      </motion.header>

      {/* Main Content */}
      <main className="container mx-auto px-2 lg:px-6 py-8">
        <AnimatePresence mode="wait">
          {!selectedRhyme ? (
            // Rhymes Grid
            <motion.div
              key="rhymes-grid"
              variants={containerVariants}
              initial="hidden"
              animate="visible"
              exit="hidden"
              className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto"
            >
              {rhymes.map((rhyme) => (
                <motion.div
                  key={rhyme.id}
                  variants={itemVariants}
                  whileHover={{ scale: 1.02 }}
                  whileTap={{ scale: 0.98 }}
                  onClick={() => setSelectedRhyme(rhyme.id)}
                  className={`${rhyme.theme} rounded-3xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 cursor-pointer border-2 border-white/50 backdrop-blur-sm`}
                >
                  <div className="text-center">
                    {/* Character */}
                    <motion.div
                      animate={{ 
                        y: [0, -5, 0],
                        rotate: [0, 2, -2, 0]
                      }}
                      transition={{
                        duration: 3,
                        repeat: Infinity,
                        ease: "easeInOut"
                      }}
                      className={`w-20 h-20 ${rhyme.characterColor} rounded-full flex items-center justify-center shadow-lg border-4 border-white mb-4 mx-auto`}
                    >
                      <span className="text-3xl">{rhyme.character}</span>
                    </motion.div>

                    <h2 className="text-xl font-bold text-gray-800 mb-3">{rhyme.title}</h2>
                    <p className="text-sm text-gray-600 mb-4">‡§∏‡•Å‡§®‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç!</p>
                    
                    <motion.div
                      className="opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                      whileHover={{ scale: 1.1 }}
                    >
                      <span className="text-xs font-semibold text-orange-600">üéµ ‡§á‡§Ç‡§ü‡§∞‡•à‡§ï‡•ç‡§ü‡§ø‡§µ ‡§ó‡•Ä‡§§</span>
                    </motion.div>
                  </div>
                </motion.div>
              ))}
            </motion.div>
          ) : (
            // Selected Rhyme View
            <motion.div
              key="rhyme-detail"
              initial={{ opacity: 0, x: 50 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -50 }}
              transition={{ duration: 0.5 }}
              className="min-w-full mx-auto px-0"
            >
              <div className="mb-6">
                <motion.button
                  onClick={() => setSelectedRhyme(null)}
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                  className="flex items-center gap-2 px-4 py-2 bg-orange-500 text-white rounded-xl hover:bg-orange-600 transition-colors mb-4"
                >
                  <ArrowLeft className="w-4 h-4" />
                  ‡§µ‡§æ‡§™‡§∏ ‡§ó‡•Ä‡§§‡•ã‡§Ç ‡§™‡§∞
                </motion.button>
              </div>

              <PoemCard
                poem={getCurrentRhyme()!}
                onActivityClick={() => setShowActivity(true)}
              />
            </motion.div>
          )}
        </AnimatePresence>

        {/* Fun Section */}
        {!selectedRhyme && (
          <motion.div 
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.8, duration: 0.8 }}
            className="mt-12 text-center"
          >
            <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-8 max-w-2xl mx-auto shadow-lg">
              <motion.h3 
                animate={{ 
                  scale: [1, 1.05, 1],
                  color: ['#ea580c', '#dc2626', '#c2410c', '#ea580c']
                }}
                transition={{ 
                  duration: 4, 
                  repeat: Infinity,
                  ease: "easeInOut"
                }}
                className="text-2xl font-bold mb-4"
              >
                ‡§Æ‡§ú‡§º‡•á‡§¶‡§æ‡§∞ ‡§§‡§•‡•ç‡§Ø! üåü
              </motion.h3>
              <p className="text-gray-700 text-lg mb-4">
                ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§¨‡§æ‡§≤‡§ó‡•Ä‡§§ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø ‡§ï‡§æ ‡§π‡§ø‡§∏‡•ç‡§∏‡§æ ‡§π‡•à‡§Ç! üéµ
              </p>
              <p className="text-gray-600">
                ‡§Ø‡•á ‡§ó‡•Ä‡§§ ‡§π‡§Æ‡•á‡§Ç ‡§®‡§à ‡§ö‡•Ä‡§ú‡§º‡•á‡§Ç ‡§∏‡§ø‡§ñ‡§æ‡§§‡•á ‡§π‡•à‡§Ç ‡§î‡§∞ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§ï‡•ã ‡§¨‡•á‡§π‡§§‡§∞ ‡§¨‡§®‡§æ‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§ñ‡•á‡§≤ ‡§≠‡•Ä ‡§ñ‡•á‡§≤‡•á‡§Ç! üé≠
              </p>
            </div>
          </motion.div>
        )}
      </main>

      {/* Rhyming Activity Modal */}
      <AnimatePresence>
        {showActivity && getCurrentRhyme() && (
          <RhymingActivity
            pairs={getCurrentRhyme()!.rhymingWords}
            onComplete={handleActivityComplete}
            onClose={() => setShowActivity(false)}
          />
        )}
      </AnimatePresence>
    </div>
  );
};

export default HindiRhymesPage;
