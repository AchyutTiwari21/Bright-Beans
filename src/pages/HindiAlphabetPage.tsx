import { Link } from 'react-router-dom';
import { ArrowLeft, Volume2 } from 'lucide-react';

const HindiAlphabetPage = () => {
  const vowels = [
    { letter: '‡§Ö', word: '‡§Ö‡§®‡§æ‡§∞', emoji: 'üçé' },
    { letter: '‡§Ü', word: '‡§Ü‡§Æ', emoji: 'ü•≠' },
    { letter: '‡§á', word: '‡§á‡§Æ‡§≤‡•Ä', emoji: 'üåø' },
    { letter: '‡§à', word: '‡§à‡§ñ', emoji: 'üéã' },
    { letter: '‡§â', word: '‡§â‡§≤‡•ç‡§≤‡•Ç', emoji: 'ü¶â' },
    { letter: '‡§ä', word: '‡§ä‡§Ç‡§ü', emoji: 'üê™' },
    { letter: '‡§è', word: '‡§è‡§ï', emoji: '1Ô∏è‚É£' },
    { letter: '‡§ê', word: '‡§ê‡§®‡§ï', emoji: 'üëì' },
    { letter: '‡§ì', word: '‡§ì‡§ñ‡§≤‡•Ä', emoji: 'ü•£' },
    { letter: '‡§î', word: '‡§î‡§∞‡§§', emoji: 'üë©' }
  ];

  const consonants = [
    { letter: '‡§ï', word: '‡§ï‡§Æ‡§≤', emoji: 'ü™∑' },
    { letter: '‡§ñ', word: '‡§ñ‡§∞‡§ó‡•ã‡§∂', emoji: 'üê∞' },
    { letter: '‡§ó', word: '‡§ó‡§æ‡§Ø', emoji: 'üêÑ' },
    { letter: '‡§ò', word: '‡§ò‡§∞', emoji: 'üè†' },
    { letter: '‡§ö', word: '‡§ö‡§æ‡§Ç‡§¶', emoji: 'üåô' },
    { letter: '‡§õ', word: '‡§õ‡§§‡§∞‡•Ä', emoji: '‚òÇÔ∏è' },
    { letter: '‡§ú', word: '‡§ú‡§π‡§æ‡§ú', emoji: '‚úàÔ∏è' },
    { letter: '‡§ù', word: '‡§ù‡§Ç‡§°‡§æ', emoji: 'üö©' },
    { letter: '‡§ü', word: '‡§ü‡§Æ‡§æ‡§ü‡§∞', emoji: 'üçÖ' },
    { letter: '‡§†', word: '‡§†‡§†‡•á‡§∞‡§æ', emoji: 'üî®' },
    { letter: '‡§°', word: '‡§°‡§Æ‡§∞‡•Ç', emoji: 'ü•Å' },
    { letter: '‡§¢', word: '‡§¢‡•ã‡§≤', emoji: 'ü•Å' },
    { letter: '‡§§', word: '‡§§‡§ø‡§§‡§≤‡•Ä', emoji: 'ü¶ã' },
    { letter: '‡§•', word: '‡§•‡•à‡§≤‡§æ', emoji: 'üëú' },
    { letter: '‡§¶', word: '‡§¶‡•Ä‡§Ø‡§æ', emoji: 'ü™î' },
    { letter: '‡§ß', word: '‡§ß‡§®‡•Å‡§∑', emoji: 'üèπ' },
    { letter: '‡§®', word: '‡§®‡§æ‡§µ', emoji: '‚õµ' },
    { letter: '‡§™', word: '‡§™‡§§‡§Ç‡§ó', emoji: 'ü™Å' },
    { letter: '‡§´', word: '‡§´‡•Ç‡§≤', emoji: 'üå∏' },
    { letter: '‡§¨', word: '‡§¨‡§ï‡§∞‡•Ä', emoji: 'üêê' },
    { letter: '‡§≠', word: '‡§≠‡§æ‡§≤‡•Ç', emoji: 'üêª' },
    { letter: '‡§Æ', word: '‡§Æ‡§õ‡§≤‡•Ä', emoji: 'üê†' },
    { letter: '‡§Ø', word: '‡§Ø‡§ú‡•ç‡§û', emoji: 'üî•' },
    { letter: '‡§∞', word: '‡§∞‡§•', emoji: 'üõ∫' },
    { letter: '‡§≤', word: '‡§≤‡§°‡•ç‡§°‡•Ç', emoji: 'üçØ' },
    { letter: '‡§µ', word: '‡§µ‡§®', emoji: 'üå≥' },
    { letter: '‡§∂', word: '‡§∂‡•á‡§∞', emoji: 'ü¶Å' },
    { letter: '‡§∑', word: '‡§∑‡§ü‡•ç‡§ï‡•ã‡§£', emoji: '‚≠ê' },
    { letter: '‡§∏', word: '‡§∏‡•Ç‡§∞‡§ú', emoji: '‚òÄÔ∏è' },
    { letter: '‡§π', word: '‡§π‡§æ‡§•‡•Ä', emoji: 'üêò' }
  ];

  const colors = [
    'bg-red-100 border-red-300 text-red-800',
    'bg-blue-100 border-blue-300 text-blue-800',
    'bg-green-100 border-green-300 text-green-800',
    'bg-yellow-100 border-yellow-300 text-yellow-800',
    'bg-purple-100 border-purple-300 text-purple-800',
    'bg-pink-100 border-pink-300 text-pink-800',
    'bg-indigo-100 border-indigo-300 text-indigo-800',
    'bg-orange-100 border-orange-300 text-orange-800'
  ];

  const handleSpeak = (text: string) => {
    if ('speechSynthesis' in window) {
      const utterance = new SpeechSynthesisUtterance(text);
      utterance.lang = 'hi-IN';
      utterance.rate = 0.8;
      utterance.pitch = 1.2;
      speechSynthesis.speak(utterance);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-orange-50 via-yellow-50 to-red-50">
      {/* Header */}
      <header className="bg-white/80 backdrop-blur-sm border-b border-orange-200 sticky top-0 z-10">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center gap-4">
            <Link 
              to="/" 
              className="flex items-center gap-2 text-orange-600 hover:text-orange-800 transition-colors"
            >
              <ArrowLeft className="w-5 h-5" />
              <span>Back to Home</span>
            </Link>
            <div className="flex items-center gap-2 ml-auto">
              <h1 className="text-2xl font-bold text-orange-800">‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§µ‡§∞‡•ç‡§£‡§Æ‡§æ‡§≤‡§æ</h1>
            </div>
          </div>
        </div>
      </header>

      <main className="container mx-auto px-6 py-8">
        {/* Vowels Section */}
        <section className="mb-12">
          <h2 className="text-3xl font-bold text-center text-orange-800 mb-8">‡§∏‡•ç‡§µ‡§∞ (Vowels)</h2>
          <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-4 max-w-4xl mx-auto">
            {vowels.map((item, index) => (
              <div
                key={item.letter}
                className={`${colors[index % colors.length]} rounded-2xl p-4 border-2 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 cursor-pointer`}
                onClick={() => handleSpeak(`${item.letter} ${item.word}`)}
              >
                <div className="text-center">
                  <div className="text-4xl font-bold mb-2">{item.letter}</div>
                  <div className="text-3xl mb-2">{item.emoji}</div>
                  <div className="text-sm font-medium">{item.word}</div>
                  <Volume2 className="w-4 h-4 mx-auto mt-2 opacity-60" />
                </div>
              </div>
            ))}
          </div>
        </section>

        {/* Consonants Section */}
        <section className="mb-12">
          <h2 className="text-3xl font-bold text-center text-orange-800 mb-8">‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§® (Consonants)</h2>
          <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 lg:grid-cols-6 gap-4 max-w-7xl mx-auto">
            {consonants.map((item, index) => (
              <div
                key={item.letter}
                className={`${colors[index % colors.length]} rounded-2xl p-4 border-2 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 cursor-pointer`}
                onClick={() => handleSpeak(`${item.letter} ${item.word}`)}
              >
                <div className="text-center">
                  <div className="text-4xl font-bold mb-2">{item.letter}</div>
                  <div className="text-3xl mb-2">{item.emoji}</div>
                  <div className="text-sm font-medium">{item.word}</div>
                  <Volume2 className="w-4 h-4 mx-auto mt-2 opacity-60" />
                </div>
              </div>
            ))}
          </div>
        </section>

        {/* Instructions */}
        <div className="text-center">
          <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-8 max-w-2xl mx-auto shadow-lg">
            <h3 className="text-2xl font-bold text-orange-800 mb-4">‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡§æ ‡§§‡§∞‡•Ä‡§ï‡§æ</h3>
            <p className="text-gray-700 text-lg mb-4">
              ‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§â‡§∏‡§ï‡•Ä ‡§Ü‡§µ‡§æ‡§ú‡§º ‡§∏‡•Å‡§®‡•á‡§Ç! üîä
            </p>
            <p className="text-gray-600">
              ‡§π‡§∞ ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§è‡§ï ‡§Æ‡§ú‡§º‡•á‡§¶‡§æ‡§∞ ‡§∂‡§¨‡•ç‡§¶ ‡§î‡§∞ ‡§á‡§Æ‡•ã‡§ú‡•Ä ‡§π‡•à ‡§ú‡•ã ‡§Ø‡§æ‡§¶ ‡§∞‡§ñ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à!
            </p>
          </div>
        </div>
      </main>
    </div>
  );
};

export default HindiAlphabetPage;
